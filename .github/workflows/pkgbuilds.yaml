
name: PKGBUILDs

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  aur_list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.output }}
    steps:
      - uses: actions/checkout@v4
      - id: list
        run: echo "output=$(.github/ci-scripts/aur-list.sh 2>/dev/null | jq -c .)" >> $GITHUB_OUTPUT

  pkg_list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.output }}
    steps:
      - uses: actions/checkout@v4
      - id: list
        run: echo "output=$(.github/ci-scripts/pkg-list.sh 2>/dev/null | jq -c .)" >> $GITHUB_OUTPUT

  pkg_list_native:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.output }}
    steps:
      - uses: actions/checkout@v4
      - id: list
        run: echo "output=$(NATIVE_ONLY=1 .github/ci-scripts/pkg-list.sh 2>/dev/null | jq -c .)" >> $GITHUB_OUTPUT

  aur:
    runs-on: ubuntu-latest
    needs: aur_list
    strategy:
      matrix: ${{ fromJson(needs.aur_list.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        with:
          base_image: menci/archlinuxarm:base-devel
          run: |
            set -uexo pipefail

            pacman --noconfirm --noprogressbar -Sy git
            git clone https://aur.archlinux.org/${{matrix.package}}.git

            if ! ./github/ci-scripts/check-package-published.sh ${{matrix.package}}; then
              echo "${pkg} already exists, skipping build"
              exit 0
            fi

            ./github/ci-scripts/makepkg.sh ${{matrix.package}}
      - uses: actions/upload-artifact@v4
        with:
          name: package-${{matrix.package}}
          path: ${{github.workspace}}/_pkg/**/*.pkg.tar.zst

  pkgs:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    needs: pkg_list
    strategy:
      matrix: ${{ fromJson(needs.pkg_list.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        with:
          base_image: menci/archlinuxarm:base-devel
          run: |
            set -uexo pipefail

            if ! ./github/ci-scripts/check-package-published.sh PKGBUILDs/${{matrix.package}}; then
              echo "${pkg} already exists, skipping build"
              exit 0
            fi

            ./github/ci-scripts/makepkg.sh PKGBUILDs/${{matrix.package}}
      - uses: actions/upload-artifact@v4
        with:
          name: package-${{matrix.package}}
          path: _pkg/**/*.pkg.tar.zst

  pkgs_native:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    needs: pkg_list_native
    strategy:
      matrix: ${{ fromJson(needs.pkg_list_native.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: build package
        run: |
          set -uexo pipefail

          if ! ./github/ci-scripts/check-package-published.sh PKGBUILDs/${{matrix.package}}; then
            echo "${pkg} already exists, skipping build"
            exit 0
          fi

          CARCH="aarch64" ./github/ci-scripts/makepkg.sh PKGBUILDs/${{matrix.package}}
      - uses: actions/upload-artifact@v4
        with:
          name: package-${{matrix.package}}
          path: _pkg/**/*.pkg.tar.zst

  repo_upload:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    needs:
      - aur
      - pkgs
      - pkgs_native
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: repo/
          pattern: package-*
          merge-multiple: true
      - name: publish new packages
        env:
          RCLONE_CONFIG_BUCKET_TYPE: b2
          RCLONE_CONFIG_BUCKET_ACCOUNT: ${{secrets.BUCKET_ACCOUNT}}
          RCLONE_CONFIG_BUCKET_KEY: ${{secrets.BUCKET_KEY}}
        run: |
          set -uexo pipefail

          if [[ -z "$(find repo/ -name '*.pkg.tar.zst')" ]]; then
            echo "no new packages to publish"
            exit
          fi

          pacman -Sy --noconfirm rclone
          bucket=samcday-archlinux-msm8916

          rclone copy BUCKET:$bucket/msm8916.db repo/
          rclone copy BUCKET:$bucket/msm8916.files repo/

          ln -s msm8916.db repo/msm8916.db.tar.xz
          ln -s msm8916.files repo/msm8916.files.tar.xz

          repo-add repo/msm8916.db.tar.xz repo/*.pkg.tar.zst

          rclone copy --include '*.pkg.tar.zst' repo/ BUCKET:$bucket/
          rclone copy -L repo/msm8916.db BUCKET:$bucket/
          rclone copy -L repo/msm8916.files BUCKET:$bucket/
